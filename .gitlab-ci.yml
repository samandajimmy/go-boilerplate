stages:
  - lint
  - test
  - build
  - deploy

variables:
  IMAGE_URL: artifactory.pegadaian.co.id:5443/$CI_PROJECT_PATH:$CI_COMMIT_REF_SLUG
  OPENSHIFT_REGION: jkt
  OPENSHIFT_OC_URL: https://api.ocp-$OPENSHIFT_REGION.pegadaian.co.id:6443

.init: &init
  before_script:
    - cp ${ARTIFACTORY_SSL_CERT} ${CI_PROJECT_DIR}/data/ssl_certificate.crt
    - mkdir -p ~/.docker/ && echo $DOCKER_AUTH_CONFIG > ~/.docker/config.json
    - export GOPRIVATE="repo.pegadaian.co.id,artifactory.pegadaian.co.id/repository/go-group-01"
    - export GOPROXY="https://artifactory.pegadaian.co.id/repository/go-group-01/"
    - export GONOSUMDB="github.com/*,golang.org/*,gopkg.in/*,gitlab.com/*,cloud.google.com/*,go.*,google.golang.org/*,gotest.*,honnef.co/*,mellium.im/*"

linter:
  stage: lint
  image:
    name: artifactory.pegadaian.co.id:8084/golangci/golangci-lint:v1.42.1
    entrypoint: [""]
  <<: *init
  script:
    - cp ${CI_PROJECT_DIR}/data/ssl_certificate.crt /usr/local/share/ca-certificates/ssl_certificate.crt
    - chmod 644 /usr/local/share/ca-certificates/ssl_certificate.crt && update-ca-certificates
    - cp config/.netrc ~/.netrc
    - chmod 600 ~/.netrc
    - go mod download
    - golangci-lint run
  only:
    - merge_requests

test:
  stage: test
  image: artifactory.pegadaian.co.id:8084/docker/compose:1.29.2
  services:
    - artifactory.pegadaian.co.id:8084/docker:dind
  <<: *init
  script:
    - touch .env
    - cp ${APP_ENV} .env
    - docker-compose build test_app
    - docker-compose up --force-recreate test_app
    - export TEST_STATUS=$(docker inspect go-boiler-plate-test-app --format='{{.State.ExitCode}}')
    - eval "[[ "$TEST_STATUS" == "1" ]] && exit 1 || exit 0"
  only:
    - merge_requests

build:
  stage: build
  image: artifactory.pegadaian.co.id:8084/docker:latest
  services:
    - name: artifactory.pegadaian.co.id:8084/docker:dind
      command: [ "--insecure-registry=artifactory.pegadaian.co.id:8084" ]
  <<: *init
  script:
    - docker build -t ${IMAGE_URL} --progress plain -f ${CI_PROJECT_DIR}/deployment/dev.Dockerfile .
    - echo "  > Push image to Container Registry..."
    - docker push $IMAGE_URL
    - echo "  > Done..."
  only:
    - master

deploy_dev:
  image: artifactory.pegadaian.co.id:8084/tj/openshift-client:latest
  stage: deploy
  script:
    - while true; do result=0; oc login -u $OC_USER -p $OC_PASS --server=$OPENSHIFT_OC_URL --insecure-skip-tls-verify || result=$?; tj=$((tj+1)); if [ $result -eq 0 ]; then break; elif [ $tj -gt 5 ]; then exit 1; fi; echo "retry $tj";done;
    - oc rollout latest dc/go-boiler-plate-$CI_COMMIT_REF_SLUG
  only:
    - master
